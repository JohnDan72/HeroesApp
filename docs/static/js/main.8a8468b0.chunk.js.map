{"version":3,"sources":["components/hero/HeroCard.module.css","components/Common.module.css","components/ui/SideNavBar.module.css","media/assets sync /^/.*$","media/assets/dc-arrow.jpg","media/assets/dc-batman.jpg","media/assets/dc-black.jpg","media/assets/dc-blue.jpg","media/assets/dc-flash.jpg","media/assets/dc-green.jpg","media/assets/dc-martian.jpg","media/assets/dc-robin.jpg","media/assets/dc-superman.jpg","media/assets/dc-wonder.jpg","media/assets/dcLogo.png","media/assets/marvel-captain.jpg","media/assets/marvel-cyclops.jpg","media/assets/marvel-daredevil.jpg","media/assets/marvel-hawkeye.jpg","media/assets/marvel-hulk.jpg","media/assets/marvel-iron.jpg","media/assets/marvel-silver.jpg","media/assets/marvel-spider.jpg","media/assets/marvel-thor.jpg","media/assets/marvel-wolverine.jpg","media/assets/marvelLogo.png","components/hero/HeroScreen.module.css","components/login/FormLogin.module.css","types/types.js","auth/authReducer.js","GeneralContext.js","data/heroes.js","helpers/heroesImgs.js","components/hero/HeroCard.js","components/hero/HeroList.js","selectors/getHeroesByPublisher.js","components/ui/CustomNavLink.js","components/dc/DCScreen.js","components/home/HomePage.js","components/marvel/MarvelScreen.js","components/textfieldsForm/TexFieldButton.js","models/search/searchModel.js","components/search/FormSearch.js","hooks/useForm.js","components/search/SearchScreen.js","selectors/getHeroesByText.js","components/hero/HeroScreen.js","selectors/getHeroesById.js","media/img/logoCircle.png","components/ui/MiNavBar.js","components/ui/SideNavBar.js","HeroesApp.js","routes/DashboardRouter.js","components/textfieldsForm/TexField.js","media/img/logo.png","models/login/formModel.js","data/users.js","components/login/FormLogin.js","selectors/loginUser.js","components/login/LoginScreen.js","components/404/NotFound.js","routes/PrivateRoute.js","routes/PublicRoute.js","routes/AppRouter.js","MainApp.js","index.js","components/login/LoginScreen.module.css"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","types","authReducer","state","action","type","payload","logged","GeneralContext","createContext","heroes","superhero","publisher","alter_ego","first_appearance","characters","heroesImgs","require","HeroCard","navigate","useNavigate","Panel","bodyFill","className","styles","rsPanel","src","default","imgCard","alt","Button","appearance","onClick","defaultProps","HeroList","useMemo","includes","filter","h","getHeroesByPublisher","FlexboxGrid","justify","hero","Item","as","Col","CustomNavLink","React","forwardRef","ref","href","children","rest","to","DCScreen","bgImg3","Breadcrumb","breadcrumbText","active","Divider","HomePage","bgImg1","MarvelScreen","bgImg2","TextFieldButton","name","accepter","label","helpBlock","btnType","icon","Form","Group","controlId","InputGroup","style","width","Control","HelpText","StringType","Schema","Types","searchModel","Model","search","isRequired","maxLength","FormSearch","handleSearch","handleInputChange","formRef","formValue","model","onSubmit","value","placeholder","onChange","useForm","initialState","useState","loading","error","status","error_msg","setFormValue","resetForm","setFormError","setLoading","SearchScreen","location","useLocation","queryString","parse","query","useRef","input_2","input_3","results","regExp","RegExp","test","getHeroesByText","BiSearchAlt2","fontSize","xs","length","HeroScreen","id_hero","useParams","heroInfo","find","getHeroesById","logoPath","startsWith","heroImgDiv","heroImg","sm","md","heroContent","align","bgDivider","logoDiv","logoImg","color","MiNavBar","useContext","setTheme","setActive","user","dispatch","Navbar","Brand","height","Nav","activeKey","onSelect","eventKey","pullRight","Dropdown","title","console","log","SideNavBar","expanded","setExpanded","Sidebar","display","flexDirection","collapsible","Sidenav","Body","sideHeader","IconButton","HeroesApp","Container","Header","Content","DashboardRouter","theme","CustomProvider","path","element","index","TextField","ControlLabel","email","minLength","isEmail","password","users","FormLogin","status_error","logo","imgStyle","textCenter","formStatus","Promise","res","rej","setTimeout","loginUser","then","userData","lastPath","localStorage","getItem","replace","fluid","autoComplete","forgotDiv","size","loadingStyle","Loader","ButtonToolbar","block","centerButton","marginLeft","Message","showIcon","googleDiv","newAccount","LoginScreen","allHeighWidth","xsHidden","smHidden","lg","Carousel","autoplay","carousel1","carousel5","carousel6","carousel2","NotFound","PrivateRoute","pathname","setItem","PublicRoute","AppRouter","exact","init","JSON","MainApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8a8468b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgCard\":\"HeroCard_imgCard__PMQdV\",\"rsPanel\":\"HeroCard_rsPanel__11ZZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoDiv\":\"Common_logoDiv__ufXL2\",\"bgImg1\":\"Common_bgImg1__3afmW\",\"bgImg2\":\"Common_bgImg2__3BVaA\",\"bgImg3\":\"Common_bgImg3__3kPln\",\"breadcrumbText\":\"Common_breadcrumbText__zgcBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideHeader\":\"SideNavBar_sideHeader__3yHRY\"};","var map = {\n\t\"./dc-arrow.jpg\": 451,\n\t\"./dc-batman.jpg\": 452,\n\t\"./dc-black.jpg\": 453,\n\t\"./dc-blue.jpg\": 454,\n\t\"./dc-flash.jpg\": 455,\n\t\"./dc-green.jpg\": 456,\n\t\"./dc-martian.jpg\": 457,\n\t\"./dc-robin.jpg\": 458,\n\t\"./dc-superman.jpg\": 459,\n\t\"./dc-wonder.jpg\": 460,\n\t\"./dcLogo.png\": 461,\n\t\"./marvel-captain.jpg\": 462,\n\t\"./marvel-cyclops.jpg\": 463,\n\t\"./marvel-daredevil.jpg\": 464,\n\t\"./marvel-hawkeye.jpg\": 465,\n\t\"./marvel-hulk.jpg\": 466,\n\t\"./marvel-iron.jpg\": 467,\n\t\"./marvel-silver.jpg\": 468,\n\t\"./marvel-spider.jpg\": 469,\n\t\"./marvel-thor.jpg\": 470,\n\t\"./marvel-wolverine.jpg\": 471,\n\t\"./marvelLogo.png\": 472\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 450;","export default __webpack_public_path__ + \"static/media/dc-arrow.15b27bc2.jpg\";","export default __webpack_public_path__ + \"static/media/dc-batman.ab9eadc3.jpg\";","export default __webpack_public_path__ + \"static/media/dc-black.3747c663.jpg\";","export default __webpack_public_path__ + \"static/media/dc-blue.cc8169a3.jpg\";","export default __webpack_public_path__ + \"static/media/dc-flash.b3922f25.jpg\";","export default __webpack_public_path__ + \"static/media/dc-green.01c54ee1.jpg\";","export default __webpack_public_path__ + \"static/media/dc-martian.78565f7d.jpg\";","export default __webpack_public_path__ + \"static/media/dc-robin.ea4afe99.jpg\";","export default __webpack_public_path__ + \"static/media/dc-superman.e9391474.jpg\";","export default __webpack_public_path__ + \"static/media/dc-wonder.970ba2d6.jpg\";","export default __webpack_public_path__ + \"static/media/dcLogo.87b51e5f.png\";","export default __webpack_public_path__ + \"static/media/marvel-captain.d2c7774d.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-cyclops.f1442408.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-daredevil.2f4f1a57.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-hawkeye.1f78e874.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-hulk.d1af5fe5.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-iron.b394df11.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-silver.1d43a08b.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-spider.054016b4.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-thor.c63e651c.jpg\";","export default __webpack_public_path__ + \"static/media/marvel-wolverine.ee676488.jpg\";","export default __webpack_public_path__ + \"static/media/marvelLogo.4a96bcd6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgDivider\":\"HeroScreen_bgDivider__2qcv8\",\"heroImgDiv\":\"HeroScreen_heroImgDiv__3Osgh\",\"heroImg\":\"HeroScreen_heroImg__24q8g\",\"heroContent\":\"HeroScreen_heroContent__2AHyN\",\"logoImg\":\"HeroScreen_logoImg__3IQ5-\",\"logoDiv\":\"HeroScreen_logoDiv__1A4OP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgStyle\":\"FormLogin_imgStyle__23TJB\",\"textCenter\":\"FormLogin_textCenter__l1wbq\",\"centerButton\":\"FormLogin_centerButton__34ums\",\"forgotDiv\":\"FormLogin_forgotDiv__4CA3X\",\"googleDiv\":\"FormLogin_googleDiv__1froy\",\"newAccount\":\"FormLogin_newAccount__2rAlE\",\"loadingStyle\":\"FormLogin_loadingStyle__exnGR\"};","\r\n\r\nexport const types = {\r\n    login: '[auth] Login',\r\n    logout: '[auth] Logout',\r\n}","import { types } from '../types/types';\r\n\r\n// state = {\r\n//     name: 'Juan Dan',\r\n//     logged: true\r\n// }\r\n\r\nexport const authReducer = ( state = {} , action ) => {\r\n    switch(action.type){\r\n        case types.login:\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n        case types.logout:\r\n            return {\r\n                logged: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createContext } from \"react\";\r\n\r\nexport const GeneralContext = createContext(null);","export const heroes = [\r\n    {\r\n        id: 'dc-batman',\r\n        superhero:'Batman', \r\n        publisher:'DC Comics', \r\n        alter_ego:'Bruce Wayne',\r\n        first_appearance:'Detective Comics #27',\r\n        characters:'Bruce Wayne'\r\n    },\r\n    {\r\n        id: 'dc-superman',\r\n        superhero:'Superman', \r\n        publisher:'DC Comics', \r\n        alter_ego:'Kal-El',\r\n        first_appearance:'Action Comics #1',\r\n        characters:'Kal-El'\r\n    },\r\n    {\r\n        id: 'dc-flash',\r\n        superhero:'Flash', \r\n        publisher:'DC Comics', \r\n        alter_ego:'Jay Garrick',\r\n        first_appearance:'Flash Comics #1',\r\n        characters:'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        id: 'dc-green',\r\n        superhero:'Green Lantern', \r\n        publisher:'DC Comics', \r\n        alter_ego:'Alan Scott',\r\n        first_appearance:'All-American Comics #16',\r\n        characters:'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        id: 'dc-arrow',\r\n        superhero:'Green Arrow', \r\n        publisher:'DC Comics', \r\n        alter_ego:'Oliver Queen',\r\n        first_appearance:'More Fun Comics #73',\r\n        characters:'Oliver Queen'\r\n    },\r\n    {\r\n        id: 'dc-wonder',\r\n        superhero:'Wonder Woman', \r\n        publisher:'DC Comics', \r\n        alter_ego:'Princess Diana',\r\n        first_appearance:'All Star Comics #8',\r\n        characters:'Princess Diana'\r\n    },\r\n    {\r\n        id: 'dc-martian',\r\n        superhero:'Martian Manhunter', \r\n        publisher:'DC Comics', \r\n        alter_ego:'J\\'onn J\\'onzz',\r\n        first_appearance:'Detective Comics #225',\r\n        characters:'Martian Manhunter'\r\n    },\r\n    {\r\n        id: 'dc-robin',\r\n        superhero:'Robin/Nightwing', \r\n        publisher:'DC Comics', \r\n        alter_ego:'Dick Grayson',\r\n        first_appearance:'Detective Comics #38',\r\n        characters:'Dick Grayson'\r\n    },\r\n    {\r\n        id: 'dc-blue',\r\n        superhero:'Blue Beetle', \r\n        publisher:'DC Comics', \r\n        alter_ego:'Dan Garret',\r\n        first_appearance:'Mystery Men Comics #1',\r\n        characters:'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        id: 'dc-black',\r\n        superhero:'Black Canary', \r\n        publisher:'DC Comics', \r\n        alter_ego:'Dinah Drake',\r\n        first_appearance:'Flash Comics #86',\r\n        characters:'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        id: 'marvel-spider',\r\n        superhero:'Spider Man', \r\n        publisher:'Marvel Comics', \r\n        alter_ego:'Peter Parker',\r\n        first_appearance:'Amazing Fantasy #15',\r\n        characters:'Peter Parker'\r\n    },\r\n    {\r\n        id: 'marvel-captain',\r\n        superhero:'Captain America', \r\n        publisher:'Marvel Comics', \r\n        alter_ego:'Steve Rogers',\r\n        first_appearance:'Captain America Comics #1',\r\n        characters:'Steve Rogers'\r\n    },\r\n    {\r\n        id: 'marvel-iron',\r\n        superhero:'Iron Man', \r\n        publisher:'Marvel Comics', \r\n        alter_ego:'Tony Stark',\r\n        first_appearance:'Tales of Suspense #39',\r\n        characters:'Tony Stark'\r\n    },\r\n    {\r\n        id: 'marvel-thor',\r\n        superhero:'Thor', \r\n        publisher:'Marvel Comics', \r\n        alter_ego:'Thor Odinson',\r\n        first_appearance:'Journey into Myster #83',\r\n        characters:'Thor Odinson'\r\n    },\r\n    {\r\n        id: 'marvel-hulk',\r\n        superhero:'Hulk', \r\n        publisher:'Marvel Comics', \r\n        alter_ego:'Bruce Banner',\r\n        first_appearance:'The Incredible Hulk #1',\r\n        characters:'Bruce Banner'\r\n    },\r\n    {\r\n        id: 'marvel-wolverine',\r\n        superhero:'Wolverine', \r\n        publisher:'Marvel Comics', \r\n        alter_ego:'James Howlett',\r\n        first_appearance:'The Incredible Hulk #180',\r\n        characters:'James Howlett'\r\n    },\r\n    {\r\n        id: 'marvel-daredevil',\r\n        superhero:'Daredevil', \r\n        publisher:'Marvel Comics', \r\n        alter_ego:'Matthew Michael Murdock',\r\n        first_appearance:'Daredevil #1',\r\n        characters:'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        id: 'marvel-hawkeye',\r\n        superhero:'Hawkeye', \r\n        publisher:'Marvel Comics', \r\n        alter_ego:'Clinton Francis Barton',\r\n        first_appearance:'Tales of Suspense #57',\r\n        characters:'Clinton Francis Barton'\r\n    },\r\n    {\r\n        id: 'marvel-cyclops',\r\n        superhero:'Cyclops', \r\n        publisher:'Marvel Comics', \r\n        alter_ego:'Scott Summers',\r\n        first_appearance:'X-Men #1',\r\n        characters:'Scott Summers'\r\n    },\r\n    {\r\n        id: 'marvel-silver',\r\n        superhero:'Silver Surfer', \r\n        publisher:'Marvel Comics', \r\n        alter_ego:'Norrin Radd',\r\n        first_appearance:'The Fantastic Four #48',\r\n        characters:'Norrin Radd'\r\n    }\r\n]","\r\nexport const heroesImgs = require.context('../media/assets' , true);\r\n","import React from 'react';\r\nimport styles from \"./HeroCard.module.css\";\r\nimport PropTypes from 'prop-types';\r\nimport { Button, Panel } from 'rsuite';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// imgPath \r\nimport { heroesImgs } from '../../helpers/heroesImgs';\r\n\r\n\r\nconst propTypes = {\r\n    id: PropTypes.string,\r\n    superhero: PropTypes.string,\r\n    publisher: PropTypes.string,\r\n    alter_ego: PropTypes.string,\r\n    first_appearance: PropTypes.string,\r\n    characters: PropTypes.string,\r\n};\r\nconst defaultProps = {};\r\n\r\nconst HeroCard = ({\r\n    id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters\r\n}) => {\r\n    const navigate = useNavigate();\r\n    const handleClick = () => {\r\n        return navigate(`/hero/${id}`)\r\n    }\r\n\r\n    return (\r\n        <Panel bodyFill className={`${styles.rsPanel} animate__animated animate__fadeIn`}>\r\n            <img src={heroesImgs(`./${id}.jpg`).default} className={styles.imgCard} alt={superhero} />\r\n            <Panel>\r\n                <Button appearance=\"subtle\" onClick={handleClick}>{superhero}</Button>\r\n            </Panel>\r\n        </Panel>\r\n    );\r\n}\r\n\r\n\r\nHeroCard.propTypes = propTypes;\r\nHeroCard.defaultProps = defaultProps;\r\n// #endregion\r\n\r\nexport default HeroCard;","import React, { useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getHeroesByPublisher } from \"../../selectors/getHeroesByPublisher\";\r\nimport { Col, FlexboxGrid } from 'rsuite';\r\nimport HeroCard from './HeroCard';\r\n\r\n\r\n\r\nconst propTypes = {\r\n    publisher: PropTypes.string\r\n};\r\nconst defaultProps = {};\r\n\r\n\r\nconst HeroList = ({ publisher = '' }) => {\r\n    // const [counter, setCounter] = useState(0);\r\n\r\n\r\n    const heroes = useMemo(() => getHeroesByPublisher(publisher) , [publisher]);\r\n    return (\r\n\r\n        <FlexboxGrid className=\"my-2\" justify=\"center\">\r\n            {/* Prueba useMemo\r\n            {counter} \r\n            <Button className=\"my-3\" appearance=\"ghost\" onClick={()=> setCounter(counter + 1)}>sumar</Button> */}\r\n\r\n            {\r\n                heroes.map(hero => (\r\n                    <FlexboxGrid.Item as={Col} className=\"mt-3\" key={hero.id} >\r\n                        <HeroCard {...hero}/>\r\n                    </FlexboxGrid.Item>\r\n                ))\r\n            }\r\n        </FlexboxGrid>\r\n\r\n    );\r\n}\r\n\r\nHeroList.propTypes = propTypes;\r\nHeroList.defaultProps = defaultProps;\r\n\r\nexport default HeroList;","import { heroes } from \"../data/heroes\"\r\n\r\nexport const getHeroesByPublisher = ( publisher = '' ) => {\r\n    // console.log(\"getHeroesByPublisher\");\r\n    const validPublisher = ['Marvel Comics' , 'DC Comics'];\r\n\r\n    if(validPublisher.includes(publisher))\r\n        return heroes.filter(h => h.publisher === publisher);\r\n\r\n    // return all by default\r\n    return heroes;\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const CustomNavLink = React.forwardRef(({ href, children, ...rest }, ref) => (\r\n    <Link ref={ref} to={href} {...rest}>\r\n        {children}\r\n    </Link>\r\n));","import React from 'react';\r\nimport { Breadcrumb, Divider } from 'rsuite';\r\nimport styles from \"../Common.module.css\";\r\nimport HeroList from '../hero/HeroList';\r\nimport { CustomNavLink } from '../ui/CustomNavLink';\r\n\r\n// import PropTypes from 'prop-types';\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\nconst DCScreen = () => {\r\n    return(\r\n        <>\r\n            <div className={`${styles.bgImg3} v-a-middle`} >\r\n                <Breadcrumb className={`container ${styles.breadcrumbText}`}>\r\n                    <Breadcrumb.Item as={CustomNavLink} href=\"/\" >\r\n                        Home\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item active>\r\n                        DC\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <Divider></Divider>\r\n                <HeroList publisher=\"DC Comics\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nDCScreen.propTypes = propTypes;\r\nDCScreen.defaultProps = defaultProps;\r\n\r\nexport default DCScreen;","import React from 'react';\r\nimport { Breadcrumb, Divider } from 'rsuite';\r\nimport HeroList from '../hero/HeroList';\r\nimport styles from \"../Common.module.css\";\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <>\r\n            <div className={`${styles.bgImg1} v-a-middle`} >\r\n                <Breadcrumb className=\"container\">\r\n                    <Breadcrumb.Item active className={`${styles.breadcrumbText}`}>\r\n                        Home\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <Divider></Divider>\r\n                <HeroList publisher=\"\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\nimport { Breadcrumb, Divider } from 'rsuite';\r\nimport styles from \"../Common.module.css\";\r\nimport HeroList from '../hero/HeroList';\r\nimport { CustomNavLink } from '../ui/CustomNavLink';\r\n// import PropTypes from 'prop-types';\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\nconst MarvelScreen = () => {\r\n    return (\r\n        <>\r\n            <div className={`${styles.bgImg2} v-a-middle`} >\r\n                <Breadcrumb className={`container ${styles.breadcrumbText}`}>\r\n                    <Breadcrumb.Item as={CustomNavLink} href=\"/\" >\r\n                        Home\r\n                    </Breadcrumb.Item>\r\n                    <Breadcrumb.Item active>\r\n                        Marvel\r\n                    </Breadcrumb.Item>\r\n                </Breadcrumb>\r\n            </div>\r\n            <div className=\"container mt-5\">\r\n                <Divider></Divider>\r\n                <HeroList publisher=\"Marvel Comics\" />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nMarvelScreen.propTypes = propTypes;\r\nMarvelScreen.defaultProps = defaultProps;\r\n\r\nexport default MarvelScreen;","import React from 'react';\r\nimport { Form, InputGroup } from 'rsuite';\r\n\r\n\r\n\r\nconst TextFieldButton = ({ id,name, label, accepter, helpBlock, btnType, icon, ...rest }) => {\r\n    return (\r\n        <Form.Group controlId={id}>\r\n            <InputGroup style={{ width: \"100%\"}}>\r\n                <Form.Control\r\n                    id={id}\r\n                    name={name}\r\n                    accepter={accepter}\r\n                    {...rest}\r\n                />\r\n                <InputGroup.Button type={btnType}>\r\n                    {icon}\r\n                </InputGroup.Button>\r\n            </InputGroup>\r\n            <Form.HelpText>{helpBlock}</Form.HelpText>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default TextFieldButton;","import { Schema } from \"rsuite\"\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst maxSearch = 40;\r\n\r\nconst searchModel = Schema.Model({\r\n    search: StringType()\r\n        .isRequired('Campo requerido')\r\n        .maxLength(maxSearch , `Máximo ${maxSearch} caracteres`)\r\n})\r\n\r\n\r\nexport default searchModel;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form } from 'rsuite';\r\n\r\nimport TextFieldButton from '../textfieldsForm/TexFieldButton';\r\n// form model\r\nimport searchModel from '../../models/search/searchModel';\r\n// icons\r\nimport { Search } from '@rsuite/icons';\r\n\r\n\r\nconst propTypes = {\r\n    handleSearch: PropTypes.func.isRequired,\r\n    handleInputChange: PropTypes.func.isRequired,\r\n};\r\nconst defaultProps = {};\r\n\r\nconst FormSearch = ({ handleSearch , handleInputChange , formRef , formValue}) => {\r\n\r\n    return (\r\n        <Form   ref={formRef}\r\n                model={searchModel} \r\n                onSubmit={handleSearch} >\r\n            <TextFieldButton\r\n                id=\"id_search_input\"\r\n                name=\"search\"\r\n                value={formValue.search}\r\n                icon={<Search />}\r\n                placeholder=\"Busca tu héroe favorito\"\r\n                btnType=\"submit\"\r\n                onChange={(value) => handleInputChange({ name:\"search\" , value })} />\r\n\r\n        </Form>\r\n    );\r\n}\r\n\r\nFormSearch.propTypes = propTypes;\r\nFormSearch.defaultProps = defaultProps;\r\n\r\nexport default FormSearch;","import { useState } from 'react';\r\n\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [formValue, setFormValue] = useState({\r\n        ...initialState,\r\n        loading: false,\r\n        error: {\r\n            status: false,\r\n            error_msg: ''\r\n        }\r\n    });\r\n\r\n    const handleInputChange = ({ name, value }) => {\r\n        setFormValue({\r\n            ...formValue,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setFormValue({\r\n            ...initialState,\r\n            loading: false,\r\n            error: {\r\n                status: false,\r\n                error_msg: ''\r\n            }\r\n        });\r\n    }\r\n\r\n    const setFormError = (status, error_msg = '') => {\r\n        setFormValue({\r\n            ...formValue,\r\n            error: {\r\n                status,\r\n                error_msg\r\n            }\r\n        });\r\n    }\r\n\r\n    const setLoading = (loading) => {\r\n        setFormValue({\r\n            ...formValue,\r\n            loading\r\n        })\r\n    }\r\n\r\n    return {\r\n        formValue,\r\n        setFormValue,\r\n        handleInputChange,\r\n        resetForm,\r\n        setFormError,\r\n        setLoading\r\n    };\r\n}\r\n\r\n\r\n","import React, { useMemo, useRef } from 'react';\r\nimport { Col, Divider, FlexboxGrid } from 'rsuite';\r\nimport queryString from \"query-string\";\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n// import PropTypes from 'prop-types';\r\nimport HeroCard from '../hero/HeroCard';\r\nimport FormSearch from './FormSearch';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { getHeroesByText } from '../../selectors/getHeroesByText';\r\n\r\n// icons\r\nimport { Icon } from '@rsuite/icons';\r\nimport { BiSearchAlt2 } from 'react-icons/bi';\r\n\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\nconst SearchScreen = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const { query = '' } = queryString.parse(location.search);\r\n\r\n    const formRef = useRef();\r\n    const { formValue, handleInputChange } = useForm({ search: query, input_2: '' , input_3: '' });\r\n    const results = useMemo(() => getHeroesByText(query), [query]);\r\n\r\n\r\n    const handleSearch = (status) => {\r\n        // console.log(`Status: ${status}`);\r\n        // console.log(\"search: \" + formValue.search);\r\n        if (status) {\r\n            navigate(`?query=${formValue.search}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-5\">\r\n            <Divider><Icon as={BiSearchAlt2} style={{ fontSize: '26px' }} /></Divider>\r\n            <FlexboxGrid justify=\"center\">\r\n                <FlexboxGrid.Item as={Col} >\r\n                    <h4>Búsqueda</h4>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item as={Col} xs={20}>\r\n                    <FormSearch\r\n                        formRef={formRef}\r\n                        formValue={formValue}\r\n                        handleSearch={handleSearch}\r\n                        handleInputChange={handleInputChange} />\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n            {\r\n                (results.length > 0)\r\n                    ? (<h5>Resultados ({results.length})</h5>)\r\n                    : <h5>Sin Resultados</h5>\r\n            }\r\n\r\n            {\r\n                results.map(hero => (\r\n                    <FlexboxGrid.Item as={Col} className=\"mt-3\" key={hero.id} >\r\n                        <HeroCard {...hero} />\r\n                    </FlexboxGrid.Item>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nSearchScreen.propTypes = propTypes;\r\nSearchScreen.defaultProps = defaultProps;\r\n\r\nexport default SearchScreen;","import { heroes } from '../data/heroes';\r\n\r\nexport const getHeroesByText = (termino = '') => {\r\n    // console.log(\"getHeroByText called\");\r\n    const regExp = new RegExp(`${termino}`, 'gi')\r\n    return heroes.filter(hero =>\r\n        regExp.test(hero.id) ||\r\n        regExp.test(hero.alter_ego) ||\r\n        regExp.test(hero.publisher) ||\r\n        regExp.test(hero.superhero)\r\n    );\r\n}","import React, { useMemo } from 'react';\r\nimport styles from \"./HeroScreen.module.css\";\r\nimport { useParams, Navigate , useNavigate } from 'react-router-dom';\r\nimport { Button, Col, Divider, FlexboxGrid, Panel } from 'rsuite';\r\nimport { getHeroesById } from \"../../selectors/getHeroesById\";\r\n// import PropTypes from 'prop-types';\r\n// imgPath\r\nimport { heroesImgs } from '../../helpers/heroesImgs';\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\nconst HeroScreen = () => {\r\n    // const [counter, setCounter] = useState(0);\r\n\r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n    const { id_hero } = params;\r\n\r\n    \r\n    const heroInfo = useMemo(() => getHeroesById(id_hero), [id_hero]);\r\n\r\n    if (!heroInfo) {\r\n        return <Navigate to=\"/\" />;\r\n    }\r\n    const { id,\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters } = heroInfo;\r\n    const logoPath = (publisher.startsWith('Marvel')) ? `marvelLogo.png`: `dcLogo.png`;\r\n    \r\n    const handleReturn = () => {\r\n        navigate(-1);\r\n    }\r\n    return (\r\n        <div className=\"container my-5\">\r\n            \r\n            {/* Prueba useMemo\r\n            {counter} \r\n            <Button className=\"my-3\" appearance=\"ghost\" onClick={()=> setCounter(counter + 1)}>sumar</Button> */}\r\n\r\n\r\n            <Panel style={{ width: \"100%\" }} bodyFill>\r\n                <FlexboxGrid justify=\"center\">\r\n                    <FlexboxGrid.Item as={Col}  className={`${styles.heroImgDiv} animate__animated animate__bounceInLeft`}>\r\n                        <img className={`${styles.heroImg}`} src={heroesImgs(`./${id}.jpg`).default} alt={superhero} />\r\n                    </FlexboxGrid.Item>\r\n                    <FlexboxGrid.Item as={Col} xs={22} sm={20} md={10} className={`${styles.heroContent} animate__animated animate__bounceInRight`}>\r\n                        <div className={`container my-4`} >\r\n                            <FlexboxGrid align=\"middle\" >\r\n                                <FlexboxGrid.Item as={Col} xs={16}>\r\n                                    <h2>{superhero}</h2>\r\n                                    <h5>{publisher}</h5>\r\n                                    <Divider className={styles.bgDivider}></Divider>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item as={Col} xs={8} className={styles.logoDiv}>\r\n                                    <img src={heroesImgs(`./${logoPath}`).default } className={styles.logoImg} alt={superhero}/>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item as={Col} xs={24}>\r\n                                    <h4>Primera aparición </h4>\r\n                                    <h5>{first_appearance}</h5>\r\n                                    <Divider className={styles.bgDivider}></Divider>\r\n                                </FlexboxGrid.Item>\r\n                                <FlexboxGrid.Item as={Col} xs={24}>\r\n                                    <h4>Alter Ego </h4>\r\n                                    <h5>{alter_ego}</h5>\r\n                                    <Divider className={styles.bgDivider}></Divider>\r\n                                    <h4>Characters </h4>\r\n                                    <p className=\"mb-4\" >{characters}</p>\r\n                                    <Button     color=\"blue\" \r\n                                                appearance=\"ghost\" \r\n                                                onClick={handleReturn}>regresar</Button>\r\n                                </FlexboxGrid.Item>\r\n                            </FlexboxGrid>\r\n                        </div>\r\n                    </FlexboxGrid.Item>\r\n                </FlexboxGrid>\r\n            </Panel>\r\n        </div>\r\n    );\r\n}\r\n\r\nHeroScreen.propTypes = propTypes;\r\nHeroScreen.defaultProps = defaultProps;\r\n\r\nexport default HeroScreen;","import { heroes } from \"../data/heroes\";\r\n\r\n\r\nexport const getHeroesById = (id) => {\r\n    // console.log(\"getHeroById\");\r\n    return heroes.find( h => h.id === id )\r\n}","export default __webpack_public_path__ + \"static/media/logoCircle.a2908fc9.png\";","import React, { useContext } from 'react';\r\nimport styles from '../Common.module.css';\r\n// import PropTypes from 'prop-types';\r\nimport { Nav, Navbar } from 'rsuite';\r\nimport { CustomNavLink } from './CustomNavLink';\r\nimport { GeneralContext } from '../../GeneralContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// react icons\r\nimport { BsFillPersonFill, BsSearch } from \"react-icons/bs\";\r\nimport { GiBatMask, GiMaskedSpider } from 'react-icons/gi';\r\nimport { MdColorLens, MdDarkMode, MdLightMode } from 'react-icons/md';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport logoPath from '../../media/img/logoCircle.png';\r\nimport { types } from '../../types/types';\r\n\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\nconst MiNavBar = () => {\r\n\r\n\r\n    const navigate = useNavigate();\r\n    const { setTheme, active, setActive , user , dispatch } = useContext(GeneralContext);\r\n\r\n    const handleLogout = () => {\r\n        console.log(\"LogOut!!!!\");\r\n        dispatch({\r\n            type: types.logout\r\n        });\r\n        navigate('/login')\r\n    }\r\n    return (\r\n\r\n        <Navbar appearance=\"inverse\">\r\n            <div className=\"container\">\r\n                <Navbar.Brand as={CustomNavLink} href=\"/\" className={styles.logoDiv}>\r\n                    <img src={logoPath} alt=\"logo\" height=\"50\"/>\r\n                </Navbar.Brand>\r\n                <Nav activeKey={active} onSelect={setActive}>\r\n                    <Nav.Item as={CustomNavLink} href=\"/dc\" eventKey=\"dc\" icon={<GiBatMask />}>DC</Nav.Item>\r\n                    <Nav.Item as={CustomNavLink} href=\"/marvel\" eventKey=\"marvel\" icon={<GiMaskedSpider />}>Marvel</Nav.Item>\r\n                    <Nav.Item as={CustomNavLink} href=\"/search\" eventKey=\"search\" icon={<BsSearch />}>Search</Nav.Item>\r\n\r\n                </Nav>\r\n                <Nav pullRight activeKey={active} onSelect={setActive}>\r\n                    <Nav.Dropdown title=\"Theme\" icon={<MdColorLens />}>\r\n                        <Nav.Dropdown.Item as={CustomNavLink} icon={<MdLightMode />} eventKey='light' onClick={() => setTheme('light')}> Mode light</Nav.Dropdown.Item>\r\n                        <Nav.Dropdown.Item as={CustomNavLink} icon={<MdDarkMode />} eventKey='dark' onClick={() => setTheme('dark')}> Mode dark</Nav.Dropdown.Item>\r\n                    </Nav.Dropdown>\r\n                    <Nav.Dropdown title={user.name} icon={<BsFillPersonFill />} id=\"id_account_nav\">\r\n                        <Nav.Dropdown.Item as={CustomNavLink} icon={<FiLogOut />} onClick={handleLogout} id=\"id_logout\">Logout</Nav.Dropdown.Item>\r\n                    </Nav.Dropdown>\r\n                </Nav>\r\n            </div>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nMiNavBar.propTypes = propTypes;\r\nMiNavBar.defaultProps = defaultProps;\r\n\r\nexport default MiNavBar;","import React, { useContext, useState } from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport logoPath from '../../media/img/logoCircle.png';\r\n\r\nimport { IconButton, Nav, Sidebar, Sidenav } from 'rsuite';\r\nimport { GeneralContext } from '../../GeneralContext';\r\nimport { CustomNavLink } from './CustomNavLink';\r\nimport { types } from '../../types/types';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// styles\r\nimport styles from './SideNavBar.module.css';\r\n\r\n// icons\r\nimport { BsFillHouseFill, BsFillPersonFill, BsSearch } from 'react-icons/bs';\r\nimport { GiBatMask, GiMaskedSpider } from 'react-icons/gi';\r\nimport { MdColorLens, MdDarkMode, MdLightMode } from 'react-icons/md';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport { ArrowLeftLine, ArrowRightLine } from '@rsuite/icons';\r\n\r\n\r\nconst SideNavBar = () => {\r\n    const navigate = useNavigate();\r\n    const [expanded, setExpanded] = useState(false);\r\n    const { user , dispatch , setTheme , active , setActive } = useContext(GeneralContext);\r\n\r\n    const handleLogout = () => {\r\n        dispatch({\r\n            type: types.logout\r\n        });\r\n        navigate('/login');\r\n        \r\n    }\r\n\r\n    return (\r\n        <Sidebar className=\"hideSidebar\"\r\n            style={{ display: 'flex', flexDirection: 'column' }}\r\n            width={expanded ? 220 : 56}\r\n            collapsible >\r\n\r\n\r\n            <Sidenav\r\n                expanded={expanded}\r\n                appearance=\"inverse\"\r\n            >\r\n                <Sidenav.Body>\r\n                    <div className={`v-a-middle ${styles.sideHeader}`}>\r\n                        <img src={logoPath} alt=\"logo\" height=\"50\" />\r\n                        <h5 className={ expanded ? 'ml-2' : 'hide'}>Heroes App</h5>\r\n                    </div>\r\n\r\n                    <Nav activeKey={active}\r\n                        onSelect={setActive}>\r\n\r\n                        <Nav.Item as={CustomNavLink} href=\"/\" eventKey=\"\" icon={<BsFillHouseFill />}>\r\n                            Home\r\n                        </Nav.Item>\r\n                        <Nav.Item as={CustomNavLink} href=\"/dc\" eventKey=\"dc\" icon={<GiBatMask />}>DC</Nav.Item>\r\n                        <Nav.Item as={CustomNavLink} href=\"/marvel\" eventKey=\"marvel\" icon={<GiMaskedSpider />}>Marvel</Nav.Item>\r\n\r\n                        <Nav.Item as={CustomNavLink} href=\"/search\" eventKey=\"search\" icon={<BsSearch />}>Search</Nav.Item>\r\n\r\n                        <Nav.Dropdown title=\"Theme\" icon={<MdColorLens />}>\r\n                            <Nav.Dropdown.Item icon={<MdLightMode />} eventKey='light' onClick={() => setTheme('light')}> Mode light</Nav.Dropdown.Item>\r\n                            <Nav.Dropdown.Item icon={<MdDarkMode />} eventKey='dark' onClick={() => setTheme('dark')}> Mode dark</Nav.Dropdown.Item>\r\n                        </Nav.Dropdown>\r\n\r\n                        <Nav.Dropdown title={user.name} icon={<BsFillPersonFill />}>\r\n                            <Nav.Dropdown.Item  icon={<FiLogOut />} onClick={handleLogout}>Logout</Nav.Dropdown.Item>\r\n                        </Nav.Dropdown>\r\n\r\n                        <IconButton icon={expanded ? <ArrowLeftLine /> : <ArrowRightLine />}\r\n                            onClick={() => setExpanded(!expanded)}\r\n                            appearance=\"primary\"\r\n                            style={{ width: '100%' }} />\r\n                    </Nav>\r\n                </Sidenav.Body>\r\n            </Sidenav>\r\n        </Sidebar>\r\n    );\r\n}\r\n\r\nexport default SideNavBar;","import React from 'react';\r\n// import PropTypes from 'prop-types';\r\nimport { Container, Content, Header } from 'rsuite';\r\nimport MiNavBar from './components/ui/MiNavBar';\r\nimport { Outlet } from 'react-router-dom';\r\nimport SideNavBar from './components/ui/SideNavBar';\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\nconst HeroesApp = () => {\r\n    return (\r\n        <Container>\r\n\r\n            <SideNavBar />\r\n        \r\n            <Container>\r\n                <Header className=\"hideNav\">\r\n                    <MiNavBar />\r\n                </Header>\r\n                <Content>\r\n                    <Outlet />\r\n                </Content>\r\n            </Container>\r\n        </Container>\r\n    );\r\n}\r\n\r\nHeroesApp.propTypes = propTypes;\r\nHeroesApp.defaultProps = defaultProps;\r\n\r\nexport default HeroesApp;","import React, { useContext } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n// context\r\nimport { GeneralContext } from '../GeneralContext';\r\n// my components\r\nimport DCScreen from '../components/dc/DCScreen';\r\nimport HomePage from '../components/home/HomePage';\r\nimport MarvelScreen from '../components/marvel/MarvelScreen';\r\nimport SearchScreen from '../components/search/SearchScreen';\r\nimport HeroScreen from '../components/hero/HeroScreen';\r\nimport HeroesApp from '../HeroesApp';\r\nimport { CustomProvider } from 'rsuite';\r\n\r\nconst DashboardRouter = () => {\r\n    const { theme } = useContext(GeneralContext)\r\n\r\n    return (\r\n        <CustomProvider theme={theme}>\r\n            <Routes>\r\n                <Route path=\"\" element={<HeroesApp />}>\r\n                    <Route index element={<HomePage />} />\r\n                    <Route path=\"dc\" element={<DCScreen />} />\r\n                    <Route path=\"marvel\" element={<MarvelScreen />} />\r\n                    <Route path=\"search\" element={<SearchScreen />} />\r\n                    <Route path=\"hero/:id_hero\" element={<HeroScreen />} />\r\n                </Route>\r\n            </Routes>\r\n        </CustomProvider>\r\n    );\r\n}\r\n\r\nexport default DashboardRouter;","import React from 'react';\r\nimport { Form } from 'rsuite';\r\n\r\n\r\n\r\nconst TextField = ({name, label, accepter, helpBlock, ...rest}) => {\r\n    return (\r\n        <Form.Group>\r\n            <Form.ControlLabel>{label}</Form.ControlLabel>\r\n            <Form.Control name={name} accepter={accepter} {...rest} />\r\n            <Form.HelpText>{helpBlock}</Form.HelpText>\r\n        </Form.Group>\r\n    )\r\n}\r\n\r\nexport default TextField;","export default __webpack_public_path__ + \"static/media/logo.3e8fd038.png\";","import { Schema } from \"rsuite\";\r\nconst { StringType } = Schema.Types;\r\n\r\n\r\nconst minEmail = 10;\r\nconst maxEmail = 50;\r\nconst minPassword = 6;\r\nconst maxPassword = 30;\r\n\r\nconst model = Schema.Model({\r\n    email: StringType()\r\n        .isRequired('Campo requerido')\r\n        .minLength(minEmail, `Debe tener mínimo ${minEmail} caracteres`)\r\n        .maxLength(maxEmail, `Debe tener máximo ${maxEmail} caracteres`)\r\n        .isEmail('Ingresa un email válido'),\r\n    password: StringType()\r\n        .isRequired('Campo requerido')\r\n        .minLength(minPassword, `Debe tener mínimo ${minPassword} caracteres`)\r\n        .maxLength(maxPassword, `Debe tener máximo ${maxPassword} caracteres`)\r\n});\r\n\r\nexport default model;","\r\nexport const users = [\r\n    {\r\n        id: 1,\r\n        name: 'Juan Daniel',\r\n        email: 'ejemplo1@gmail.com',\r\n        password: '123456'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Ejemplo 2',\r\n        email: 'ejemplo2@gmail.com',\r\n        password: '123456'\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Ejemplo 3',\r\n        email: 'ejemplo3@gmail.com',\r\n        password: '123456'\r\n    },\r\n]","import React, { useContext } from 'react';\r\n// import JSONView from '../ui/JSONView';\r\nimport { Button, ButtonToolbar, Col, Divider, FlexboxGrid, Form, Loader, Message } from 'rsuite';\r\nimport { useNavigate } from 'react-router-dom'\r\n// icons\r\nimport { BiSend } from 'react-icons/bi';\r\nimport { FcGoogle } from 'react-icons/fc';\r\n\r\n\r\n// import PropTypes from 'prop-types';\r\n\r\nimport TextField from '../textfieldsForm/TexField';\r\n\r\n// logo\r\nimport logo from \"../../media/img/logo.png\";\r\nimport styles from \"./FormLogin.module.css\";\r\nimport model from '../../models/login/formModel';\r\nimport { loginUser } from '../../selectors/loginUser';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { GeneralContext } from '../../GeneralContext';\r\nimport { types } from '../../types/types';\r\n\r\n\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\nconst FormLogin = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const { formValue, handleInputChange, setFormError, setLoading, resetForm } = useForm({\r\n        email: 'ejemplo1@gmail.com',\r\n        password: '123456'\r\n    });\r\n    const { status: status_error, error_msg } = formValue.error;\r\n    const { loading, email, password } = formValue;\r\n\r\n    const { dispatch } = useContext(GeneralContext);\r\n\r\n    const handleLogin = (formStatus) => {\r\n        if (formStatus) {\r\n            setLoading(true); //load while authenticate\r\n\r\n            // NOTA:    tener cuidado con funciones async \r\n            //          ya que no funciona bien por el cambio \r\n            //          de state en PublicRoute\r\n            loginUser(email, password)\r\n                .then(userData => {\r\n                    if (userData) {\r\n                        console.log(\"Sucess!!!\");\r\n                        resetForm();\r\n                        dispatch({ type: types.login, payload: userData });\r\n\r\n                        const lastPath = localStorage.getItem('lastPath') || '/marvel';\r\n\r\n                        navigate(lastPath, {\r\n                            replace: true\r\n                        });\r\n                    }\r\n                    else {\r\n                        console.log(\"Fail!!!\");\r\n\r\n                        setFormError(true, 'Email y/o password incorrectos');\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5 animate__animated animate__bounceInRight\">\r\n            {/* <JSONView formValue={formValue} /> */}\r\n            <FlexboxGrid justify=\"center\">\r\n                {/* logo */}\r\n                <FlexboxGrid.Item as={Col} xs={24}>\r\n                    <img src={logo} className={styles.imgStyle} alt=\"logo\" />\r\n                </FlexboxGrid.Item>\r\n                {/* título */}\r\n                <FlexboxGrid.Item as={Col} xs={24} className=\"mt-3\">\r\n                    <h4 id=\"id_bienvenida\" className={styles.textCenter}>Bienvenido a Heroes App</h4>\r\n                </FlexboxGrid.Item>\r\n                {/* form */}\r\n                <FlexboxGrid.Item as={Col} xs={20} sm={18} md={12} className=\"mt-5\">\r\n                    <Form\r\n                        // ref={formRef}\r\n                        formValue={{ email, password }}\r\n                        onSubmit={handleLogin}\r\n                        fluid\r\n                        model={model}\r\n                    >\r\n\r\n                        <TextField name=\"email\"\r\n                            id=\"id_email_input\"\r\n                            label=\"Email\"\r\n                            value={email}\r\n                            onChange={(value) => handleInputChange({ name: 'email', value })} />\r\n                        <TextField name=\"password\"\r\n                            id=\"id_password_input\"\r\n                            label=\"Password\"\r\n                            value={password}\r\n                            type=\"password\"\r\n                            autoComplete=\"off\"\r\n                            helpBlock={\r\n                                <span className={styles.forgotDiv}>\r\n                                    <Button appearance=\"link\" size=\"xs\" type=\"button\">\r\n                                        ¿Olvidaste tu contraseña?\r\n                                    </Button>\r\n                                </span>\r\n\r\n                            } onChange={(value) => handleInputChange({ name: 'password', value })} />\r\n\r\n                        {   //se muestra loading o button si esta cargando\r\n                            loading\r\n                                ? (\r\n                                    <div className={styles.loadingStyle}>\r\n                                        <Loader size=\"md\" />\r\n                                    </div>\r\n                                )\r\n                                : (\r\n                                    <ButtonToolbar className=\"mt-5\">\r\n                                        <Button appearance=\"primary\" type=\"submit\" block className={styles.centerButton}>\r\n                                            Submit\r\n                                            <BiSend style={{ marginLeft: '10px' }} />\r\n                                        </Button>\r\n                                    </ButtonToolbar>\r\n                                )\r\n                        }\r\n\r\n                    </Form>\r\n                </FlexboxGrid.Item>\r\n                {/* divider */}\r\n                <FlexboxGrid.Item as={Col} xs={20} sm={18} md={13} className=\"mt-4\" >\r\n                    {\r\n                        status_error &&\r\n                        <Message showIcon type=\"error\">\r\n                            {error_msg}\r\n                        </Message>\r\n                    }\r\n                    <Divider> ó </Divider>\r\n                </FlexboxGrid.Item>\r\n                {/* google sign */}\r\n                <FlexboxGrid.Item as={Col} xs={24} className={`mt-4 ${styles.googleDiv}`} >\r\n                    <Button appearance=\"link\" type=\"button\">\r\n                        <FcGoogle />\r\n                        Sign with Google\r\n                    </Button>\r\n                </FlexboxGrid.Item>\r\n                {/* create account */}\r\n                <FlexboxGrid.Item as={Col} xs={24} className={`mt-4 ${styles.googleDiv}`} >\r\n                    <span className={styles.newAccount}>\r\n                        Nuevo en Heroes App?\r\n                        <Button appearance=\"link\" size=\"sm\" type=\"button\">\r\n                            Crea una cuenta\r\n                        </Button>\r\n                    </span>\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nFormLogin.propTypes = propTypes;\r\nFormLogin.defaultProps = defaultProps;\r\n\r\nexport default FormLogin;","import { users } from \"../data/users\"\r\n\r\nexport const loginUser = ( email = '' , password = '') => {\r\n    return new Promise((res,rej) => {\r\n        setTimeout(() => {\r\n            res(users.find(user => user.email === email && user.password === password));\r\n        }, 1500);\r\n        \r\n    })\r\n} ","import React from 'react';\r\nimport { Carousel, Col, CustomProvider, FlexboxGrid } from 'rsuite';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport FormLogin from './FormLogin';\r\n\r\n// styles\r\nimport styles from './LoginScreen.module.css';\r\n\r\n\r\n\r\nconst LoginScreen = () => {\r\n\r\n    return (\r\n        <CustomProvider theme=\"dark\">\r\n            <FlexboxGrid className={styles.allHeighWidth} justify=\"center\">\r\n                <FlexboxGrid.Item className=\"h-100\" as={Col} xsHidden smHidden md={12} lg={14} >\r\n                    <Carousel className=\"h-100 custom-slider animate__animated animate__bounceInLeft\" autoplay >\r\n                        <div className={styles.carousel1} >\r\n                            <div className=\"v-a-middle allHeightWidth\" justify=\"center\" >\r\n                                <h4> Heroes App </h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.carousel5} >\r\n                            <div className=\"v-a-middle allHeightWidth\" justify=\"center\" >\r\n                                <h4> Los héroes que todo el mundo conoce al alcance de un click </h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.carousel6} >\r\n                            <div className=\"v-a-middle allHeightWidth\" justify=\"center\" >\r\n                                <h4> Lo mejor de Marvel y DC </h4>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.carousel2} >\r\n                            <div className=\"v-a-middle allHeightWidth\"\r\n                                justify=\"center\" >\r\n                                <h4> Busca y encuentra las características de tu héroe favorito </h4>\r\n                            </div>\r\n                        </div>\r\n                    </Carousel>\r\n                </FlexboxGrid.Item>\r\n                <FlexboxGrid.Item as={Col} xs={22} md={12} lg={10} >\r\n                    <FormLogin />\r\n                </FlexboxGrid.Item>\r\n            </FlexboxGrid>\r\n        </CustomProvider>\r\n\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default LoginScreen;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Divider } from 'rsuite';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h3>404 - Page not found</h3>\r\n            <Divider></Divider>\r\n            <Link className=\"rs-nav-item\" to=\"/\">Go Home</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, { useContext } from 'react';\r\nimport { Navigate , useLocation } from 'react-router-dom';\r\nimport { GeneralContext } from '../GeneralContext';\r\n\r\nexport const PrivateRoute = ({ children }) => {\r\n    const { user } = useContext(GeneralContext);\r\n    const location = useLocation();\r\n\r\n    const { pathname , search } = location;\r\n\r\n    localStorage.setItem('lastPath', `${pathname}${search}`);\r\n\r\n    return (user.logged)?children:<Navigate to=\"/login\" />;\r\n}\r\n","import { useContext } from \"react\"\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { GeneralContext } from \"../GeneralContext\"\r\n\r\n\r\nexport const PublicRoute = ({ children }) => {\r\n\r\n    const { user } = useContext(GeneralContext);\r\n    const lastPath = localStorage.getItem('lastPath');\r\n\r\n    return (!user.logged)? children : <Navigate to={lastPath} />;\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n\r\n// my components\r\nimport DashboardRouter from './DashboardRouter';\r\nimport LoginScreen from '../components/login/LoginScreen';\r\nimport NotFound from '../components/404/NotFound';\r\n\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nconst propTypes = {};\r\nconst defaultProps = {};\r\n\r\n\r\n\r\nconst AppRouter = () => {\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                <Route exact\r\n                    path=\"/login\"\r\n                    element={\r\n                        <PublicRoute>\r\n                            <LoginScreen />\r\n                        </PublicRoute>\r\n                    } />\r\n                <Route exact\r\n                    path=\"/*\"\r\n                    element={\r\n                        <PrivateRoute>\r\n                            <DashboardRouter />\r\n                        </PrivateRoute>\r\n                    } />\r\n                <Route path=\"*\"\r\n                    element={<NotFound />} />\r\n            </Routes>\r\n        </Router>\r\n\r\n    );\r\n}\r\n\r\nAppRouter.propTypes = propTypes;\r\nAppRouter.defaultProps = defaultProps;\r\n\r\nexport default AppRouter;","import React , { useEffect , useState , useReducer } from 'react';\r\n\r\nimport { authReducer } from './auth/authReducer';\r\nimport { GeneralContext } from './GeneralContext';\r\nimport AppRouter from './routes/AppRouter';\r\n\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('userSession')) || { logged: false };\r\n}\r\n\r\nconst MainApp = () => {\r\n    const [user, dispatch] = useReducer(authReducer, {}, init);\r\n\r\n    const [active, setActive] = useState('')\r\n    const [theme, setTheme] = useState('dark');\r\n\r\n    useEffect(() => {\r\n        if (!user) return;\r\n        localStorage.setItem('userSession', JSON.stringify(user));\r\n    }, [user])\r\n    return (\r\n        <GeneralContext.Provider value={{\r\n            user, dispatch,\r\n            theme, setTheme,\r\n            active, setActive,\r\n        }}\r\n        >\r\n            <AppRouter />\r\n        </GeneralContext.Provider>\r\n    );\r\n}\r\n\r\nexport default MainApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './customBootstrap.css';\nimport 'rsuite/styles/index.less';\n\nimport MainApp from './MainApp';\n\n\nReactDOM.render(\n    <MainApp />\n    ,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allHeighWidth\":\"LoginScreen_allHeighWidth__3Rmtc\",\"centerContainer\":\"LoginScreen_centerContainer__U969-\",\"carousel1\":\"LoginScreen_carousel1__OShjT\",\"carousel2\":\"LoginScreen_carousel2__1j_uY\",\"carousel3\":\"LoginScreen_carousel3__34aVs\",\"carousel4\":\"LoginScreen_carousel4__3ZNGd\",\"carousel5\":\"LoginScreen_carousel5__3wxsV\",\"carousel6\":\"LoginScreen_carousel6__p5IL3\"};"],"sourceRoot":""}